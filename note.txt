def getContours(img):
    ret, img2 = cv2.threshold(img, 130, 255, cv2.THRESH_BINARY)
    kernel = np.ones((5, 5))
    imgDial = cv2.dilate(img2, kernel, iterations=2)
    imgThres = cv2.erode(imgDial, kernel, iterations=1)
    imgCanny = cv2.Canny(imgThres, 50, 50)
    contours,hierarchy = cv2.findContours(imgCanny,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_NONE)
    max_cnt=contours[0]
    maxArea=0
    for cnt in contours:
        area = cv2.contourArea(cnt)
        if area>1000:
            peri = cv2.arcLength(cnt,True)
            approx = cv2.approxPolyDP(cnt,0.02*peri,True)
            print(f"area={area},len={len(approx)}")
            if area >maxArea:
                maxArea = area
                max_cnt=cnt
    cv2.drawContours(img_Contour, max_cnt, -1, (255, 0, 0), 3)
    max_peri = cv2.arcLength(max_cnt, True)
    max_approx = cv2.approxPolyDP(max_cnt, 0.02 * max_peri, True)
    print(f"max={maxArea}")
    return cv2.boundingRect(max_approx)